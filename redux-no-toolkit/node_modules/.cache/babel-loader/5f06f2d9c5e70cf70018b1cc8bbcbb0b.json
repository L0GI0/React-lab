{"ast":null,"code":"// a global factory that you  send a request to, and depent on that request, it\n// updates a state, depending of the type of a request\n// big objects with many properties, this is what redux store is, object with a lot of preperties and these\n// properties are object, whitch can hold other project, numbers, string, many many things\nconst defaultState = {\n  users: [\"No user!\"]\n}; //reducer is simple a function\n// store is combination of reducers, the are combined togeter by using a special function from redux library\n//put store on the 'root' lever of the app\n//takes care of state managment and state changes, the action is pretty mutch what request it has received, is composed of the payload and type of action\n// payload is part of the store that it needs to be updated\n\nexport default function homePageReducer(state = defaultState, action) {\n  //state changes are based on the type of action. Thats handled inside the switch. Every reduces would look like this\n  // good pratice is to use reducer for every page\n  switch (action.type) {\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/LOGIO/Desktop/Projects/redux-no-toolkit/src/containers/HomePage/reducers.js"],"names":["defaultState","users","homePageReducer","state","action","type"],"mappings":"AAAA;AACA;AAEA;AACA;AAEA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,CAAC,UAAD;AADY,CAArB,C,CAIA;AAEA;AACA;AAEA;AACA;;AACA,eAAe,SAASC,eAAT,CAAyBC,KAAK,GAAGH,YAAjC,EAA+CI,MAA/C,EAAuD;AACpE;AACA;AACA,UAAQA,MAAM,CAACC,IAAf;AACE;AACE,aAAOF,KAAP;AAFJ;AAID","sourcesContent":["// a global factory that you  send a request to, and depent on that request, it\r\n// updates a state, depending of the type of a request\r\n\r\n// big objects with many properties, this is what redux store is, object with a lot of preperties and these\r\n// properties are object, whitch can hold other project, numbers, string, many many things\r\n\r\nconst defaultState = {\r\n  users: [\"No user!\"],\r\n};\r\n\r\n//reducer is simple a function\r\n\r\n// store is combination of reducers, the are combined togeter by using a special function from redux library\r\n//put store on the 'root' lever of the app\r\n\r\n//takes care of state managment and state changes, the action is pretty mutch what request it has received, is composed of the payload and type of action\r\n// payload is part of the store that it needs to be updated\r\nexport default function homePageReducer(state = defaultState, action) {\r\n  //state changes are based on the type of action. Thats handled inside the switch. Every reduces would look like this\r\n  // good pratice is to use reducer for every page\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}