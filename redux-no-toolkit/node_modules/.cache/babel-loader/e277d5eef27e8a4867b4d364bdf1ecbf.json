{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LOGIO\\\\Desktop\\\\Projects\\\\redux-no-toolkit\\\\src\\\\containers\\\\UserPage\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { useParams } from \"react-router-dom\";\nimport { setUser } from \"./actions\";\nimport { useDispatch } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { makeSelectUser } from \"./selectors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stateSelector = createSelector(makeSelectUser, user => ({\n  user\n}));\n\nconst actionDispatch = dispatch => ({\n  setUser: user => dispatch(setUser(user))\n});\n\nexport default function UserPage(props) {\n  _s();\n\n  const {\n    userId\n  } = useParams();\n  const {\n    setUser\n  } = actionDispatch(useDispatch());\n\n  const fetchUser = async id => {\n    const response = await Axios.get(`https://reqres.in/api/user/${id}`).catch(err => {\n      console.log(`Error: ${err}`);\n    });\n\n    if (response) {\n      setUser(response.data.data);\n    }\n  };\n\n  useEffect(() => {\n    if (userId && userId !== \"\") fetchUser(userId);\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Test\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UserPage, \"5xHPAtb+j1+MvVppGDtjlWSNz3I=\", false, function () {\n  return [useParams, useDispatch];\n});\n\n_c = UserPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"sources":["C:/Users/LOGIO/Desktop/Projects/redux-no-toolkit/src/containers/UserPage/index.jsx"],"names":["React","useEffect","Axios","useParams","setUser","useDispatch","createSelector","makeSelectUser","stateSelector","user","actionDispatch","dispatch","UserPage","props","userId","fetchUser","id","response","get","catch","err","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,cAAT,QAA+B,aAA/B;;AAEA,MAAMC,aAAa,GAAGF,cAAc,CAACC,cAAD,EAAkBE,IAAD,KAAW;AAAEA,EAAAA;AAAF,CAAX,CAAjB,CAApC;;AAEA,MAAMC,cAAc,GAAIC,QAAD,KAAe;AACpCP,EAAAA,OAAO,EAAGK,IAAD,IAAUE,QAAQ,CAACP,OAAO,CAACK,IAAD,CAAR;AADS,CAAf,CAAvB;;AAIA,eAAe,SAASG,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACtC,QAAM;AAAEC,IAAAA;AAAF,MAAaX,SAAS,EAA5B;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAcM,cAAc,CAACL,WAAW,EAAZ,CAAlC;;AAEA,QAAMU,SAAS,GAAG,MAAOC,EAAP,IAAc;AAC9B,UAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAW,8BAA6BF,EAAG,EAA3C,EAA8CG,KAA9C,CACpBC,GAAD,IAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B;AACD,KAHoB,CAAvB;;AAKA,QAAIH,QAAJ,EAAc;AACZb,MAAAA,OAAO,CAACa,QAAQ,CAACM,IAAT,CAAcA,IAAf,CAAP;AACD;AACF,GATD;;AAWAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,MAAM,IAAIA,MAAM,KAAK,EAAzB,EAA6BC,SAAS,CAACD,MAAD,CAAT;AAC9B,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApBuBF,Q;UACHT,S,EAEgBE,W;;;KAHbO,Q","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { setUser } from \"./actions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSelector } from \"reselect\";\r\nimport { makeSelectUser } from \"./selectors\";\r\n\r\nconst stateSelector = createSelector(makeSelectUser, (user) => ({ user }));\r\n\r\nconst actionDispatch = (dispatch) => ({\r\n  setUser: (user) => dispatch(setUser(user)),\r\n});\r\n\r\nexport default function UserPage(props) {\r\n  const { userId } = useParams();\r\n\r\n  const { setUser } = actionDispatch(useDispatch());\r\n\r\n  const fetchUser = async (id) => {\r\n    const response = await Axios.get(`https://reqres.in/api/user/${id}`).catch(\r\n      (err) => {\r\n        console.log(`Error: ${err}`);\r\n      }\r\n    );\r\n    if (response) {\r\n      setUser(response.data.data);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userId && userId !== \"\") fetchUser(userId);\r\n  }, [userId]);\r\n  return <div>Test</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}